[tox]
envlist =
    {py39,py310,py311}-django{420}-sqlite
    py{311}-django{420}-{mysql,mariadb,postgres}
    flake8
    docs
    ; This is not that jslint :)
    jslint
    templatelint
    black
    doc8
    isort
    bandit
    mypy-django{420}

[testenv]
passenv = *
deps =
    django420: Django>=4.2,<4.3
usedevelop = True
extras =
    async
    bugzilla
    krbauth
    tests
commands = py.test {posargs:tests/}

[docker:testdb_mysql]
image = mysql:8.0.22
ports =
    33061:3306/tcp
environment =
    MYSQL_ROOT_PASSWORD=pass
    MYSQL_DATABASE=nitrate
healthcheck_cmd = mysql -uroot -ppass -e "SELECT 1" nitrate
healthcheck_timeout = 1
healthcheck_retries = 5
healthcheck_interval = 5
healthcheck_start_period = 5

[testenv:{py311}-django{420}-mysql]
docker =
    testdb_mysql
allowlist_externals =
    bash
    sleep
extras =
    {[testenv]extras}
    mysql
setenv =
    NITRATE_DB_ENGINE = mysql
    NITRATE_DB_NAME = nitrate
    NITRATE_DB_PORT = 33061
    NITRATE_DB_USER = root
    NITRATE_DB_PASSWORD = pass
commands_pre =
    bash {toxinidir}/contrib/scripts/adjust_mysql_auth_plugin.sh root pass

[docker:testdb_mariadb]
image = mariadb:10.4.14
ports =
    33061:3306/tcp
environment =
    MYSQL_ROOT_PASSWORD=pass
    MYSQL_DATABASE=nitrate
healthcheck_cmd = mysql -uroot -ppass -e "SELECT 1" nitrate
healthcheck_timeout = 1
healthcheck_retries = 5
healthcheck_interval = 5
healthcheck_start_period = 5

[testenv:{py311}-django{420}-mariadb]
docker =
    testdb_mariadb
allowlist_externals =
    bash
    sleep
extras =
    {[testenv]extras}
    mysql
setenv =
    NITRATE_DB_ENGINE = mysql
    NITRATE_DB_NAME = nitrate
    NITRATE_DB_PORT = 33061
    NITRATE_DB_USER = root
    NITRATE_DB_PASSWORD = pass

[docker:testdb_postgres]
image = postgres:12.4-alpine
ports =
    54321:5432/tcp
environment =
    POSTGRES_USER=postgres
    POSTGRES_PASSWORD=nitrate
    POSTGRES_DB=testdb
healthcheck_cmd = PGPASSWORD=nitrate psql \
    --quiet --no-align --tuples-only -1 \
    --user=postgres \
    --dbname=testdb \
    --host=127.0.0.1 \
    --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 5
healthcheck_interval = 5
healthcheck_start_period = 5

[testenv:{py311}-django{420}-postgres]
docker =
    testdb_postgres
allowlist_externals =
    sleep
extras =
    {[testenv]extras}
    pgsql
setenv =
    NITRATE_DB_ENGINE = pgsql
    NITRATE_DB_PORT = 54321
    NITRATE_DB_USER = postgres
    NITRATE_DB_PASSWORD = nitrate
    NITRATE_DB_NAME = nitrate

[testenv:flake8]
basepython = python3
skip_install = True
deps = flake8<6.0.0
commands = flake8 src/

[testenv:black]
basepython = python3
skip_install = True
deps = black==22.10.0
commands = black {posargs:src/tcms tests}

[testenv:docs]
setenv =
    NITRATE_SECRET_KEY = key-for-testing-doc-build
basepython = python3
whitelist_externals = make
usedevelop = True
extras =
    docs
    async
    bugzilla
changedir = {toxinidir}/docs
commands = make html

[testenv:jslint]
basepython = python3
skip_install = true
whitelist_externals = eslint
commands =
    eslint \
        src/static/js/nitrate.advanced-search.js \
        src/static/js/nitrate.attachments.js \
        src/static/js/nitrate.core.js \
        src/static/js/nitrate.footer.js \
        src/static/js/nitrate.index.js \
        src/static/js/nitrate.management.js \
        src/static/js/nitrate.profiles.js \
        src/static/js/nitrate.report.js \
        src/static/js/nitrate.testcases.js \
        src/static/js/nitrate.testplans.js \
        src/static/js/nitrate.testruns.js \
        tests/js/test-tcms-actions.js \
        tests/js/test-testplan-actions.js

[testenv:templatelint]
basepython = python3
skip_install = true
whitelist_externals = bash
commands = bash ./contrib/scripts/templatelint.sh src/templates/

[testenv:doc8]
basepython = python3
skip_install = true
deps = doc8==0.10.1
commands = doc8 docs/source README.rst

[testenv:isort]
basepython = python3
skip_install = true
deps = isort==5.10.1
commands = isort --check --diff {posargs:src/tcms tests}

[testenv:bandit]
basepython = python3
skip_install = true
deps = bandit==1.7.4
commands = bandit -r {posargs:src/tcms}

[testenv:mypy-django{420}]
deps =
     {[testenv]deps}
     django420: django-stubs==4.2.7
     django420: mypy>=1.7,<1.8
usedevelop = True
extras =
    {[testenv]extras}
    mysql
    pgsql
    devtools
commands = mypy {posargs:src/tcms/ tests/}

[flake8]
exclude =
    .tox,
    .git,
    .env,
    dist,
    build,
    src/tcms/settings/,
    *sqls.py,
    urls.py,
    wsgi.py,
    *settings.py,
    *raw_sql.py,
    *xml2dict*,
    ./docs/source/conf.py
ignore = E203,E501,W503,W504
max_line_length = 100
